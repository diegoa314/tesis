$var wire 5 ! index $end
$var wire 32 " data_out $end
$var wire 2 # type_out $end
$var wire 5 $ wrport1_adr $end
$var wire 32 % wrport1_dat_r $end
$var wire 1 & wrport1_we $end
$var wire 32 ' wrport1_dat_w $end
$var wire 5 ( wrport2_adr $end
$var wire 2 ) wrport2_dat_r $end
$var wire 1 * wrport2_we $end
$var wire 2 + wrport2_dat_w $end
$var wire 2 , TYPE_data_0 $end
$var wire 2 - TYPE_data_1 $end
$var wire 2 . TYPE_data_2 $end
$var wire 2 / TYPE_data_3 $end
$var wire 2 0 TYPE_data_4 $end
$var wire 2 1 TYPE_data_5 $end
$var wire 2 2 TYPE_data_6 $end
$var wire 2 3 TYPE_data_7 $end
$var wire 2 4 TYPE_data_8 $end
$var wire 2 5 TYPE_data_9 $end
$var wire 2 6 TYPE_data_10 $end
$var wire 2 7 TYPE_data_11 $end
$var wire 2 8 TYPE_data_12 $end
$var wire 2 9 TYPE_data_13 $end
$var wire 2 : TYPE_data_14 $end
$var wire 2 ; TYPE_data_15 $end
$var wire 2 < TYPE_data_16 $end
$var wire 2 = TYPE_data_17 $end
$var wire 2 > TYPE_data_18 $end
$var wire 2 ? TYPE_data_19 $end
$var wire 2 @ TYPE_data_20 $end
$var wire 2 A TYPE_data_21 $end
$var wire 2 B TYPE_data_22 $end
$var wire 2 C TYPE_data_23 $end
$var wire 2 D TYPE_data_24 $end
$var wire 2 E TYPE_data_25 $end
$var wire 2 F TYPE_data_26 $end
$var wire 2 G TYPE_data_27 $end
$var wire 2 H TYPE_data_28 $end
$var wire 2 I TYPE_data_29 $end
$var wire 2 J TYPE_data_30 $end
$var wire 2 K TYPE_data_31 $end
$var wire 32 L INPUT_data_0 $end
$var wire 32 M INPUT_data_1 $end
$var wire 32 N INPUT_data_2 $end
$var wire 32 O INPUT_data_3 $end
$var wire 32 P INPUT_data_4 $end
$var wire 32 Q INPUT_data_5 $end
$var wire 32 R INPUT_data_6 $end
$var wire 32 S INPUT_data_7 $end
$var wire 32 T INPUT_data_8 $end
$var wire 32 U INPUT_data_9 $end
$var wire 32 V INPUT_data_10 $end
$var wire 32 W INPUT_data_11 $end
$var wire 32 X INPUT_data_12 $end
$var wire 32 Y INPUT_data_13 $end
$var wire 32 Z INPUT_data_14 $end
$var wire 32 [ INPUT_data_15 $end
$var wire 32 \ INPUT_data_16 $end
$var wire 32 ] INPUT_data_17 $end
$var wire 32 ^ INPUT_data_18 $end
$var wire 32 _ INPUT_data_19 $end
$var wire 32 ` INPUT_data_20 $end
$var wire 32 a INPUT_data_21 $end
$var wire 32 b INPUT_data_22 $end
$var wire 32 c INPUT_data_23 $end
$var wire 32 d INPUT_data_24 $end
$var wire 32 e INPUT_data_25 $end
$var wire 32 f INPUT_data_26 $end
$var wire 32 g INPUT_data_27 $end
$var wire 32 h INPUT_data_28 $end
$var wire 32 i INPUT_data_29 $end
$var wire 32 j INPUT_data_30 $end
$var wire 32 k INPUT_data_31 $end
$var wire 1 l sys_clk $end
$dumpvars
$end
#0
b00000 !
b00000000000000000000000000000000 "
b00 #
b00000 $
b00000000000000000000000000000000 %
0&
b00000000000000000000000000000000 '
b00000 (
b00 )
0*
b00 +
b01 ,
b11 -
b01 .
b11 /
b01 0
b11 1
b01 2
b11 3
b01 4
b11 5
b01 6
b11 7
b01 8
b11 9
b01 :
b10 ;
b10 <
b11 =
b01 >
b11 ?
b01 @
b11 A
b01 B
b11 C
b01 D
b11 E
b01 F
b11 G
b01 H
b11 I
b01 J
b11 K
b00000000000000000000000000000001 L
b00000000000000000000000000000011 M
b00000000000000000000000000000111 N
b00000000000000000000000000001111 O
b00000000000000000000000000011111 P
b00000000000000000000000000111111 Q
b00000000000000000000000001111111 R
b00000000000000000000000011111111 S
b00000000000000000000000111111111 T
b00000000000000000000001111111111 U
b00000000000000000000011111111111 V
b00000000000000000000111111111111 W
b00000000000000000001111111111111 X
b00000000000000000011111111111111 Y
b00000000000000000111111111111111 Z
b00000000000000001111111111111111 [
b00000000000000011111111111111111 \
b00000000000000111111111111111111 ]
b00000000000001111111111111111111 ^
b00000000000011111111111111111111 _
b00000000000111111111111111111111 `
b00000000001111111111111111111111 a
b00000000011111111111111111111111 b
b00000000111111111111111111111111 c
b00000001111111111111111111111111 d
b00000011111111111111111111111111 e
b00000111111111111111111111111111 f
b00001111111111111111111111111111 g
b00011111111111111111111111111111 h
b00111111111111111111111111111111 i
b01111111111111111111111111111111 j
b11111111111111111111111111111111 k
0l
#5
1l
b01 )
b00000000000000000000000000000001 %
#10
0l
#15
1l
b00001 !
b00000000000000000000000000000001 "
b01 #
#20
0l
#25
b00001 $
1l
b00010 !
b00001 (
#30
0l
#35
1l
b00011 !
b00010 (
b11 )
b00010 $
b00000000000000000000000000000011 %
#40
0l
#45
1l
b00100 !
b00000000000000000000000000000011 "
b11 #
b00011 $
b00000000000000000000000000000111 %
b00011 (
b01 )
#50
0l
#55
1l
b00101 !
b00000000000000000000000000000111 "
b01 #
b00100 $
b00000000000000000000000000001111 %
b00100 (
b11 )
#60
0l
#65
1l
b00110 !
b00000000000000000000000000001111 "
b11 #
b00101 $
b00000000000000000000000000011111 %
b00101 (
b01 )
#70
0l
#75
1l
b00111 !
b00000000000000000000000000011111 "
b01 #
b00110 $
b00000000000000000000000000111111 %
b00110 (
b11 )
#80
0l
#85
1l
b01000 !
b00000000000000000000000000111111 "
b11 #
b00111 $
b00000000000000000000000001111111 %
b00111 (
b01 )
#90
0l
#95
1l
b01001 !
b00000000000000000000000001111111 "
b01 #
b01000 $
b00000000000000000000000011111111 %
b01000 (
b11 )
#100
0l
#105
1l
b01010 !
b00000000000000000000000011111111 "
b11 #
b01001 $
b00000000000000000000000111111111 %
b01001 (
b01 )
b00000 !
b00000000000000000000000000000000 "
b00 #
b00000 $
b00000000000000000000000000000000 %
0&
b00000000000000000000000000000000 '
b00000 (
b00 )
0*
b00 +
b01 ,
b11 -
b01 .
b11 /
b01 0
b11 1
b01 2
b11 3
b01 4
b11 5
b01 6
b11 7
b01 8
b11 9
b01 :
b10 ;
b10 <
b11 =
b01 >
b11 ?
b01 @
b11 A
b01 B
b11 C
b01 D
b11 E
b01 F
b11 G
b01 H
b11 I
b01 J
b11 K
b00000000000000000000000000000001 L
b00000000000000000000000000000011 M
b00000000000000000000000000000111 N
b00000000000000000000000000001111 O
b00000000000000000000000000011111 P
b00000000000000000000000000111111 Q
b00000000000000000000000001111111 R
b00000000000000000000000011111111 S
b00000000000000000000000111111111 T
b00000000000000000000001111111111 U
b00000000000000000000011111111111 V
b00000000000000000000111111111111 W
b00000000000000000001111111111111 X
b00000000000000000011111111111111 Y
b00000000000000000111111111111111 Z
b00000000000000001111111111111111 [
b00000000000000011111111111111111 \
b00000000000000111111111111111111 ]
b00000000000001111111111111111111 ^
b00000000000011111111111111111111 _
b00000000000111111111111111111111 `
b00000000001111111111111111111111 a
b00000000011111111111111111111111 b
b00000000111111111111111111111111 c
b00000001111111111111111111111111 d
b00000011111111111111111111111111 e
b00000111111111111111111111111111 f
b00001111111111111111111111111111 g
b00011111111111111111111111111111 h
b00111111111111111111111111111111 i
b01111111111111111111111111111111 j
b11111111111111111111111111111111 k
0l
