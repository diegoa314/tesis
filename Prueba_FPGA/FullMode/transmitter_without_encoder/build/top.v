//--------------------------------------------------------------------------------
// Auto-generated by Migen (--------) & LiteX (690de79) on 2020-01-09 20:23:47
//--------------------------------------------------------------------------------
module top(
	input user_btn,
	output serial_tx,
	input serial_rx,
	(* dont_touch = "true" *)	input clk12
);

wire [9:0] __main___data_in0;
wire [9:0] __main___data_in1;
wire __main___trans_ready;
wire __main___tx_serial0;
reg __main___tx_10bdone = 1'd0;
reg [10:0] __main___tx_counter = 11'd0;
reg __main___tx_serial1 = 1'd1;
reg [7:0] __main___tx_data = 8'd0;
wire __main___tx_strobe;
reg [2:0] __main___tx_bitn = 3'd0;
reg __main___tx_ready = 1'd0;
reg [7:0] __main___tx_latch = 8'd0;
reg __main___tx_done = 1'd0;
reg [1:0] platform_fsm_state = 2'd0;
reg [1:0] platform_fsm_next_state = 2'd0;
reg __main___tx_ready_next_value0 = 1'd0;
reg __main___tx_ready_next_value_ce0 = 1'd0;
reg [7:0] __main___tx_data_next_value1 = 8'd0;
reg __main___tx_data_next_value_ce1 = 1'd0;
reg __main___tx_10bdone_next_value2 = 1'd0;
reg __main___tx_10bdone_next_value_ce2 = 1'd0;
reg [1:0] platform_tx_state = 2'd0;
reg [1:0] platform_tx_next_state = 2'd0;
reg [7:0] __main___tx_latch_t_next_value0 = 8'd0;
reg __main___tx_latch_t_next_value_ce0 = 1'd0;
reg [10:0] __main___tx_counter_t_next_value1 = 11'd0;
reg __main___tx_counter_t_next_value_ce1 = 1'd0;
reg __main___tx_serial1_f_next_value = 1'd0;
reg __main___tx_serial1_f_next_value_ce = 1'd0;
reg [2:0] __main___tx_bitn_t_next_value2 = 3'd0;
reg __main___tx_bitn_t_next_value_ce2 = 1'd0;
reg __main___tx_done_t_next_value3 = 1'd0;
reg __main___tx_done_t_next_value_ce3 = 1'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg platform_int_rst = 1'd1;

assign __main___data_in0 = 10'd823;
assign __main___data_in1 = __main___data_in0;
assign __main___trans_ready = user_btn;
assign serial_tx = __main___tx_serial0;
assign __main___tx_serial0 = __main___tx_serial1;
always @(*) begin
	__main___tx_10bdone_next_value2 <= 1'd0;
	__main___tx_ready_next_value0 <= 1'd0;
	__main___tx_10bdone_next_value_ce2 <= 1'd0;
	__main___tx_ready_next_value_ce0 <= 1'd0;
	__main___tx_data_next_value1 <= 8'd0;
	__main___tx_data_next_value_ce1 <= 1'd0;
	platform_fsm_next_state <= 2'd0;
	platform_fsm_next_state <= platform_fsm_state;
	case (platform_fsm_state)
		1'd1: begin
			if (__main___tx_done) begin
				platform_fsm_next_state <= 2'd2;
				__main___tx_ready_next_value0 <= 1'd1;
				__main___tx_ready_next_value_ce0 <= 1'd1;
				__main___tx_data_next_value1 <= __main___data_in1[9:5];
				__main___tx_data_next_value_ce1 <= 1'd1;
			end
		end
		2'd2: begin
			if ((~__main___tx_done)) begin
				platform_fsm_next_state <= 2'd3;
			end
		end
		2'd3: begin
			if (__main___tx_done) begin
				platform_fsm_next_state <= 1'd0;
				__main___tx_10bdone_next_value2 <= 1'd1;
				__main___tx_10bdone_next_value_ce2 <= 1'd1;
				__main___tx_ready_next_value0 <= 1'd0;
				__main___tx_ready_next_value_ce0 <= 1'd1;
			end
		end
		default: begin
			if ((__main___trans_ready & (~__main___tx_done))) begin
				platform_fsm_next_state <= 1'd1;
				__main___tx_ready_next_value0 <= 1'd1;
				__main___tx_ready_next_value_ce0 <= 1'd1;
				__main___tx_data_next_value1 <= __main___data_in1[4:0];
				__main___tx_data_next_value_ce1 <= 1'd1;
			end else begin
				platform_fsm_next_state <= 1'd0;
				__main___tx_ready_next_value0 <= 1'd0;
				__main___tx_ready_next_value_ce0 <= 1'd1;
			end
			__main___tx_10bdone_next_value2 <= 1'd0;
			__main___tx_10bdone_next_value_ce2 <= 1'd1;
		end
	endcase
end
assign __main___tx_strobe = (__main___tx_counter == 1'd0);
always @(*) begin
	__main___tx_bitn_t_next_value2 <= 3'd0;
	__main___tx_bitn_t_next_value_ce2 <= 1'd0;
	platform_tx_next_state <= 2'd0;
	__main___tx_latch_t_next_value0 <= 8'd0;
	__main___tx_done_t_next_value3 <= 1'd0;
	__main___tx_latch_t_next_value_ce0 <= 1'd0;
	__main___tx_done_t_next_value_ce3 <= 1'd0;
	__main___tx_counter_t_next_value1 <= 11'd0;
	__main___tx_counter_t_next_value_ce1 <= 1'd0;
	__main___tx_serial1_f_next_value <= 1'd0;
	__main___tx_serial1_f_next_value_ce <= 1'd0;
	platform_tx_next_state <= platform_tx_state;
	case (platform_tx_state)
		1'd1: begin
			if (__main___tx_strobe) begin
				__main___tx_serial1_f_next_value <= 1'd0;
				__main___tx_serial1_f_next_value_ce <= 1'd1;
				platform_tx_next_state <= 2'd2;
			end
		end
		2'd2: begin
			if (__main___tx_strobe) begin
				__main___tx_serial1_f_next_value <= __main___tx_latch[0];
				__main___tx_serial1_f_next_value_ce <= 1'd1;
				__main___tx_latch_t_next_value0 <= {1'd0, __main___tx_latch[7:1]};
				__main___tx_latch_t_next_value_ce0 <= 1'd1;
				__main___tx_bitn_t_next_value2 <= (__main___tx_bitn + 1'd1);
				__main___tx_bitn_t_next_value_ce2 <= 1'd1;
				if ((__main___tx_bitn == 3'd7)) begin
					platform_tx_next_state <= 2'd3;
					__main___tx_bitn_t_next_value2 <= 1'd0;
					__main___tx_bitn_t_next_value_ce2 <= 1'd1;
					__main___tx_done_t_next_value3 <= 1'd1;
					__main___tx_done_t_next_value_ce3 <= 1'd1;
				end
			end
		end
		2'd3: begin
			if (__main___tx_strobe) begin
				__main___tx_serial1_f_next_value <= 1'd1;
				__main___tx_serial1_f_next_value_ce <= 1'd1;
				__main___tx_done_t_next_value3 <= 1'd0;
				__main___tx_done_t_next_value_ce3 <= 1'd1;
				platform_tx_next_state <= 1'd0;
			end
		end
		default: begin
			if (__main___tx_ready) begin
				__main___tx_latch_t_next_value0 <= __main___tx_data;
				__main___tx_latch_t_next_value_ce0 <= 1'd1;
				__main___tx_counter_t_next_value1 <= 11'd1249;
				__main___tx_counter_t_next_value_ce1 <= 1'd1;
				platform_tx_next_state <= 1'd1;
			end else begin
				__main___tx_serial1_f_next_value <= 1'd1;
				__main___tx_serial1_f_next_value_ce <= 1'd1;
			end
		end
	endcase
end
assign sys_clk = clk12;
assign por_clk = clk12;
assign sys_rst = platform_int_rst;

always @(posedge por_clk) begin
	platform_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	platform_fsm_state <= platform_fsm_next_state;
	if (__main___tx_ready_next_value_ce0) begin
		__main___tx_ready <= __main___tx_ready_next_value0;
	end
	if (__main___tx_data_next_value_ce1) begin
		__main___tx_data <= __main___tx_data_next_value1;
	end
	if (__main___tx_10bdone_next_value_ce2) begin
		__main___tx_10bdone <= __main___tx_10bdone_next_value2;
	end
	if ((__main___tx_counter == 1'd0)) begin
		__main___tx_counter <= 11'd1249;
	end else begin
		__main___tx_counter <= (__main___tx_counter - 1'd1);
	end
	platform_tx_state <= platform_tx_next_state;
	if (__main___tx_latch_t_next_value_ce0) begin
		__main___tx_latch <= __main___tx_latch_t_next_value0;
	end
	if (__main___tx_counter_t_next_value_ce1) begin
		__main___tx_counter <= __main___tx_counter_t_next_value1;
	end
	if (__main___tx_serial1_f_next_value_ce) begin
		__main___tx_serial1 <= __main___tx_serial1_f_next_value;
	end
	if (__main___tx_bitn_t_next_value_ce2) begin
		__main___tx_bitn <= __main___tx_bitn_t_next_value2;
	end
	if (__main___tx_done_t_next_value_ce3) begin
		__main___tx_done <= __main___tx_done_t_next_value3;
	end
	if (sys_rst) begin
		__main___tx_10bdone <= 1'd0;
		__main___tx_counter <= 11'd0;
		__main___tx_serial1 <= 1'd1;
		__main___tx_data <= 8'd0;
		__main___tx_bitn <= 3'd0;
		__main___tx_ready <= 1'd0;
		__main___tx_latch <= 8'd0;
		__main___tx_done <= 1'd0;
		platform_fsm_state <= 2'd0;
		platform_tx_state <= 2'd0;
	end
end

endmodule
